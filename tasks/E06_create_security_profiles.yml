---
- name: E06a. Get SSL/SSH Inspect Profiles
  fortiosconfig:
    host: "{{ ansible_host }}"
    username: "{{ admin_username | default(ansible_username | default('admin')) }}"
    password: "{{ admin_password | default(ansible_password | default('')) }}"
    vdom: "{{ ansible_vdom | default('root') }}"
    https: "{{ ansible_https | default(true) }}"
    action: get
    config: firewall ssl-ssh-profile
  register: created_ssl_ssh_profiles

- name: E06b. Get IPS Profiles
  fortiosconfig:
    host: "{{ ansible_host }}"
    username: "{{ admin_username | default(ansible_username | default('admin')) }}"
    password: "{{ admin_password | default(ansible_password | default('')) }}"
    vdom: "{{ ansible_vdom | default('root') }}"
    https: "{{ ansible_https | default(true) }}"
    action: get
    config: ips custom
  register: created_ips_profiles

- name: E06c. Parse SSL/SSH Inspect Profiles
  set_fact:
    parsed_ssl_ssh_profiles: |
      [
        {% for profile in created_ssl_ssh_profiles.meta.results %}
          "{{ profile.name | default('Undefined') }}",
        {% endfor %}
      ]

- name: E06d. Parse IPS Profiles
  set_fact:
    parsed_ips_profiles: |
      [
        {% for profile in created_ips_profiles.meta.results %}
          "{{ profile.name | default('Undefined') }}",
        {% endfor %}
      ]

- name: E06e. Create SSL/SSH Inspect Profile
  fortios_firewall_ssl_ssh_profile:
    host: "{{ ansible_host }}"
    username: "{{ admin_username | default(ansible_username | default('admin')) }}"
    password: "{{ admin_password | default(ansible_password | default('')) }}"
    vdom: "{{ ansible_vdom | default('root') }}"
    https: "{{ ansible_https | default(true) }}"
    firewall_ssl_ssh_profile:
      state: "present"
      name: "{{ item.key }}"
      caname: "{{ item.value.ca | default('Fortinet_CA_SSL') }}"
      comment: "{{ item.value.comment | default('') }}"
      ftps:
        ports: "{{ item.value.ftps_port | default(990) }}"
      https:
        ports: "{{ item.value.https_port | default(443) }}"
      imaps:
        ports: "{{ item.value.imaps_port | default(993) }}"
      pop3s:
        ports: "{{ item.value.pop3s_port | default(995) }}"
      smtps:
        ports: "{{ item.value.smtps_port | default(495) }}"
      ssh:
        ports: "{{ item.value.ftps_port | default(22) }}"
        status: "{% if item.value.inspect_ssh | default(true) | bool %}deep-inspection{% else %}disable{% endif %}"
        inspect-all: "{% if item.value.inspect_all | default(false) | bool %}deep-inspection{% else %}disable{% endif %}"
      ssl:
        inspect-all: "{% if item.value.inspect_all | default(false) | bool %}deep-inspection{% else %}disable{% endif %}"
        untrusted-cert: "{% if item.value.block_untrusted | default(false) | bool %}block{% else %}allow{% endif %}"
      ssl-exempt: |
        [
          {% for var in item.value.exempt | default({}) %}
            {
              {% if wildcard_fqdn_ALL_ITEMS[var] is defined %}
                'type': 'wildcard-fqdn', 'wildcard-fqdn': '{{ var }}',
              {% else %}
                'type': 'address', 'address': '{{ var }}',
              {% endif %}
            },
          {% endfor %} ]"
  loop: "{{ ssl_ssh_inspect_profiles | default({}) | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when: item.value.externally_managed | default(false) == false or parsed_ssl_ssh_profiles[item.key] is not defined

- name: E06f. Create IPS Sensor
  fortios_ips_sensor:
    host: "{{ ansible_host }}"
    username: "{{ admin_username | default(ansible_username | default('admin')) }}"
    password: "{{ admin_password | default(ansible_password | default('')) }}"
    vdom: "{{ ansible_vdom | default('root') }}"
    https: "{{ ansible_https | default(true) }}"
    ips_sensor:
      state: "present"
      name: "{{ item.key }}"
      comment: "{{ item.value.comment | default('') }}"
      entries: |
        [
          {% for entry in item.value.entries | default([]) %}
            {
              'severity': "{% for severity in entry.severity | default([]) %}{{ severity }} {% endfor %}",
              'action': "{{ entry.action }}",
              'status': "{{ entry.status }}"
            },
          {% endfor %}
        ]
  loop: "{{ ips_profiles | default({}) | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when: item.value.externally_managed | default(false) == false or parsed_ips_profiles[item.key] is not defined
