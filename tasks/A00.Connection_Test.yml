---
- name: A00a. Check for a "No Proxy" match against the host
  set_fact:
    no_proxy_match: |
      {
        {% for np in (lookup('env', 'no_proxy') | replace(',', '') ).split() %}
          {% if np | regex_search('\d+\.\d+\.\d+\.\d+') | type_debug != 'NoneType' %}
            {% if np | ipaddr | type_debug != 'NoneType' and ansible_host | ipaddr(np) | type_debug != 'NoneType' %}
              "match": "True",
              "np": "{{ np }}",
              "ah": "{{ ansible_host }}",
            {% endif %}
          {% elif ansible_host | lower == np | lower %}
            "match": "True",
            "np": "{{ np }}",
            "ah": "{{ ansible_host }}",
          {% endif %}
        {% endfor %}
      }

- name: A00b. Check Online Status - Connection Test
  uri:
    follow_redirects: none
    validate_certs: False
    timeout: 5
    url: "http{% if ansible_https | default(True) %}s{% endif %}://{{ ansible_host }}/login"
  register: uri_data
  failed_when: False
  changed_when: False
  environment: "{ {% if no_proxy_match.match | default(False) %}'no_proxy': '{{ ansible_host }}'{% endif %} }"
  # environment variable only required for URI module. Other "requests" based modules do not have this issue.

- name: A00c. Report failures
  fail:
    msg: |
     Server is offline. Details to follow:
     {{ uri_data }}
  when:
  - uri_data is defined and uri_data.status < 0

- name: A00d. Perform login test
  fortiosconfig:
    host: "{{ ansible_host }}"
    username: "{{ admin_username | default(ansible_username | default('admin')) }}"
    password: "{{ admin_password | default(ansible_password | default('')) }}"
    vdom: "{{ ansible_vdom | default('root') }}"
    https: "{{ ansible_https | default(true) }}"
    action: "get"
    config: "system global"
  register: system_status
  failed_when: False
  changed_when: False

- name: A00e. Check that login was successful
  fail:
    msg: Unable to login
  when: system_status.rc | default(0) > 0
