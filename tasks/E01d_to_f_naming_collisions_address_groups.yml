---
- name: E01d. Read list of address groups
  fortiosconfig:
    host: "{{ ansible_host }}"
    username: "{{ admin_username | default(ansible_username | default('admin')) }}"
    password: "{{ admin_password | default(ansible_password | default('')) }}"
    vdom: "{{ ansible_vdom | default('root') }}"
    https: "{{ ansible_https | default(true) }}"
    action: "get"
    config: "firewall addrgrp"
  register: fw_address_group

- name: E01e. Verify there are no naming conflicts in address groups
  set_fact:
    defined_address_groups: |
      [
        {%- for object in fw_address_group.meta.results -%}
          {%- for obj in address_objects_USED_INTERNAL | dict2items -%}
            {%- if obj.key == object.name or (built_in_hosts | default({}))[object.name] is defined -%}
              '{{ object.name }}',
            {%- endif -%}
          {%- endfor -%}
        {%- endfor -%}
      ]

# Note, this item is LIKELY TO FAIL as objects are likely to only be here if they form part of a policy.
# Blocked on https://github.com/fortinet-solutions-cse/40ansible/issues/40
- name: E01f. Ensure all address objects do not currently have address groups named the same [No-Async]
  fortios_firewall_addrgrp:
    host: "{{ ansible_host }}"
    username: "{{ admin_username | default(ansible_username | default('admin')) }}"
    password: "{{ admin_password | default(ansible_password | default('')) }}"
    vdom: "{{ ansible_vdom | default('root') }}"
    https: "{{ ansible_https | default(true) }}"
    firewall_addrgrp:
      state: "absent"
      name: "{{ item }}"
  loop: "{{ defined_address_groups }}"
  loop_control:
    label: "{{ item }}"
  when: run_actions_async | default(false) | bool == false

- name: E01f. Ensure all address objects do not currently have address groups named the same (Start) [Async]
  fortios_firewall_addrgrp:
    host: "{{ ansible_host }}"
    username: "{{ admin_username | default(ansible_username | default('admin')) }}"
    password: "{{ admin_password | default(ansible_password | default('')) }}"
    vdom: "{{ ansible_vdom | default('root') }}"
    https: "{{ ansible_https | default(true) }}"
    firewall_addrgrp:
      state: "absent"
      name: "{{ item }}"
  loop: "{{ defined_address_groups }}"
  loop_control:
    label: "{{ item }}"
  async: 1000
  poll: 0
  changed_when: False
  register: sleeper
  when: run_actions_async | default(false) | bool

- name: E01f. Ensure all address objects do not currently have address groups named the same (Finish) [Async]
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: sleeper_status
  until: sleeper_status.finished
  retries: 500
  delay: 4
  loop: "{{ sleeper.results|flatten(levels=1) }}"
  when: 
  - run_actions_async | default(false) | bool
  - item.ansible_job_id is defined
  loop_control:
    label: "{{ item._ansible_item_label | default(item.item.key | default('Key is missing')) }}"
